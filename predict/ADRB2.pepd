# Peptiditor script for deriving active-state conformational changes from bovine rhodopsin.
#

# Load the active protein.
LOAD "pdbs/ADRB2/4ldo.active.pdb"

DELETE 1 1028

RENUMBER 1029 9999 29

ECHO %SEQLEN
ECHO $SEQUENCE
ECHO ""

REGION TMR1 35 58
REGION TMR2 72 95
REGION TMR3 107 129
REGION TMR4 151 174
REGION TMR5 197 220
REGION TMR6 275 298
REGION TMR7 306 329

UPRIGHT

SAVE "pdbs/ADRB2/ADRB2.active.pdb"

LET %termin = 4

# Obtain the active helix termini.

LET %i = 1
_loop:

LET %j = %TMR%i.s
LET %n = 0
LET @an[%i]  = 0
_loopn:
LET @an[%i] += %j
LET %j ++ 
LET %n ++
IF %n < %termin GOTO _loopn

LET @an[%i] /= %n


LET %j = %TMR%i.e
LET %n = 0
LET @ac[%i]  = 0
_loopn1:
LET @ac[%i] += %j
LET %j -- 
LET %n ++
IF %n < %termin GOTO _loopn1

LET @ac[%i] /= %n


LET %i ++

IF %i <= 7 GOTO _loop


# Load the inactive protein.
LOAD "pdbs/ADRB2/2rh1.inactive.pdb"

ECHO %SEQLEN
ECHO $SEQUENCE
ECHO ""

REGION TMR1 35 58
REGION TMR2 72 95
REGION TMR3 107 129
REGION TMR4 151 174
REGION TMR5 197 220
REGION TMR6 275 298
REGION TMR7 306 329

UPRIGHT

SAVE "pdbs/ADRB2/ADRB2.inactive.pdb"


# Obtain the inactive termini.

LET @icene = 0
LET @icenc = 0

LET %i = 1
_loop1:

LET %odd = %i & 1
LET %even = 1 - %odd

LET %j = %TMR%i.s
LET %n = 0
LET @in[%i]  = 0
_loopn2:
LET @in[%i] += %j
LET %j ++ 
LET %n ++
IF %n < %termin GOTO _loopn2

LET @in[%i] /= %n

# ECHO "TMR" %i ": Average of four residues starting at " %TMR%i.s " = " @in[%i]
IF %odd  THEN LET @icene += @in[%i]
IF %even THEN LET @icenc += @in[%i]

LET %j = %TMR%i.e
LET %n = 0
LET @ic[%i]  = 0
_loopn3:
LET @ic[%i] += %j
LET %j -- 
LET %n ++
IF %n < %termin GOTO _loopn3

LET @ic[%i] /= %n
IF %odd  THEN LET @icenc += @ic[%i]
IF %even THEN LET @icene += @ic[%i]

# ECHO "Got inactive start/end averages for TMR" %i "..."

LET %i ++
IF %i <= 7 GOTO _loop1


LET @icenc /= 7
LET @icene /= 7

LET %i = 1
_loop132:

LET %odd = %i & 1
LET %even = 1 - %odd

IF %odd  THEN LET @in[%i] -= @icene
IF %even THEN LET @in[%i] -= @icenc

IF %odd  THEN LET @ic[%i] -= @icenc
IF %even THEN LET @ic[%i] -= @icene

IF %odd  THEN LET &r = @in[%i]
IF %even THEN LET &r = @ic[%i]

IF %odd  THEN LET @direction = @in[%i] / &r
IF %even THEN LET @direction = @ic[%i] / &r

ECHO "TMR" %i " direction: " @direction " distance: " &r 

LET %i ++
IF %i <= 7 GOTO _loop132


# Center the data by subtracting the average.

LET @avgdeltae = 0
LET @avgdeltac = 0

LET %i = 1
_loop3:

LET %odd = %i & 1
LET %even = 1 - %odd

LET @delta_n = @an[%i] - @in[%i]
LET @delta_c = @ac[%i] - @ic[%i]

IF %odd THEN LET @avgdeltae += @delta_n
IF %even THEN IF %i != 6 THEN LET @avgdeltac += @delta_n
IF %odd THEN IF %i != 5 THEN LET @avgdeltac += @delta_c
IF %even THEN LET @avgdeltae += @delta_c

LET %i ++
IF %i <= 7 GOTO _loop3

LET @avgdeltae /= 7
LET @avgdeltac /= 5

LET %i = 1
_loop4:

LET %odd = %i & 1

IF %odd THEN LET @an[%i] -= @avgdeltae
ELSE LET @an[%i] -= @avgdeltac
IF %odd THEN LET @ac[%i] -= @avgdeltac
ELSE LET @ac[%i] -= @avgdeltae

LET %i ++
IF %i <= 7 GOTO _loop4


# Output the deltas.

ECHO "# Activation matrix from ADRB2.pepd:"
ECHO "$matrix ="
ECHO "["

LET %i = 1
_loop2:

LET @delta_n = @an[%i] - @in[%i]
LET @delta_c = @ac[%i] - @ic[%i]

ECHO "	'TMR" %i "' => [ " ~
IF @delta_n.x >= 0 ECHO " " ~
ECHO @delta_n.x ", " ~
IF @delta_n.y >= 0 ECHO " " ~
ECHO @delta_n.y ", " ~
IF @delta_n.z >= 0 ECHO " " ~
ECHO @delta_n.z ", " ~
IF @delta_c.x >= 0 ECHO " " ~
ECHO @delta_c.x ", " ~
IF @delta_c.y >= 0 ECHO " " ~
ECHO @delta_c.y ", " ~
IF @delta_c.z >= 0 ECHO " " ~
ECHO @delta_c.z " ],"

LET %i ++

IF %i <= 7 GOTO _loop2
ECHO "];"

# DUMP



